buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'io.spring.gradle:dependency-management-plugin:1.0.0.RELEASE'
    }
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'eclipse'
apply plugin: 'groovy'

eclipse {
	project {
	  natures.add 'org.eclipse.jdt.groovy.core.groovyNature'
	}
}

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom 'io.spring.platform:platform-bom:Brussels-SR1'
    }
}

dependencies {
    compile 'org.springframework.data:spring-data-jpa'
	
	compile 'com.h2database:h2'
	compile 'com.zaxxer:HikariCP'
	compile 'org.hibernate:hibernate-entitymanager'

	compile 'com.fasterxml.jackson.core:jackson-annotations:2.8.7'
	compile 'org.slf4j:slf4j-api:1.7.5'
	compile 'org.slf4j:slf4j-log4j12:1.7.5'
    compile 'org.codehaus.groovy:groovy-all:2.4.9'

    testCompile 'junit:junit:4.12'
	testCompile 'org.assertj:assertj-core:3.2.0'
	testCompile 'org.springframework:spring-test'
	testCompile ('org.dbunit:dbunit:2.5.1') {
		exclude group: 'junit'
	}
	testCompile 'com.github.springtestdbunit:spring-test-dbunit:1.2.1'
}

task initProject(description: 'Initialize project directory structure.') {
	doLast {
		// Default package to be created in each src dir.
		def defaultPackage = 'vn/springdatajpa/sample'

		// http://stackoverflow.com/a/23004783
		['java', 'groovy', 'resources'].each {
			sourceSets*."${it}".srcDirs*.each { dir ->
				def newDir = new File(dir, defaultPackage)
				if( !newDir.exists() ) {
					newDir.mkdirs()  // Create dir.
				}
			}
		}
	}
}
